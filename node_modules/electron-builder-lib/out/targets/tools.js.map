{"version":3,"file":"tools.js","sourceRoot":"","sources":["../../src/targets/tools.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,AAAO,AAAe,AAAM,AAAc;;;;;;AAC1C,AAAO,AAAE,AAAgB,AAAE,AAAM,AAA8B;;;;;;AAC/D,AAAO,AAAE,AAAI,AAAE,AAAM,AAAU;;;;AAC/B,AAAO,AAAK,AAAI,AAAM,AAAM;;;;AAC5B,AAAO,AAAE,AAAQ,AAAE,AAAM,AAAS,AAElC,AAAM;;;;;;;;;AACJ,AAAsC;AACtC,AAAM,WAAC,AAAgB,4DAAC,AAAa,eAAE,AAAa,eAAE,AAA0F,AAAC,AACnJ;AAAC,AAED,AAAM;;AACJ,AAAsC;AACtC,AAAM,WAAC,AAAgB,4DAAC,AAAU,YAAE,AAAO,SAAE,AAA0F,AAAC,AAC1I;AAAC,AAED,AAAM;AAAC,MAAM,AAAO,mEAAY,AAAG,AAAE;AACnC,AAAE,AAAC,QAAC,AAAO,QAAC,AAAQ,aAAK,AAAO,WAAI,AAAO,QAAC,AAAG,IAAC,AAAc,mBAAK,AAAM,AAAC,QAAC,AAAC;AAC1E,AAAM,eAAC,AAAe,8CAAC,AAAO,QAAC,AAAK,AAAC,AACvC;AAAC;AAED,UAAM,AAAS,YAAG,AAAO,QAAC,AAAQ,aAAK,AAAQ,AAAC,AAAC,WAAC,AAAK,AAAC,AAAC,AAAC,oBAAY,AAAO,QAAC,AAAI,SAAK,AAAM,AAAC,AAAC,SAAC,AAAE,AAAC,AAAC,KAAC,AAAK,KAAE;AAE5G,AAAE,AAAC,QAAC,AAAO,QAAC,AAAQ,aAAK,AAAQ,AAAC,UAAC,AAAC;AAClC,AAAsC;AACtC,AAAM,eAAC,AAAgB,4DAAC,AAAK,OAAE,AAA4B,8BAAE,AAA0F,AAAC,4FACrJ,AAAI,KAAC,AAAE,AAAC,AAAE,MAAC,AAAI,MAAC,AAAI,KAAC,AAAE,IAAE,AAAK,AAAC,AAAC,AACrC;AAAC;AAED,AAAsC;AACtC,UAAM,AAAQ,WAAG,AAAO,QAAC,AAAI,SAAK,AAAM,AAAC,AAAC,SAAC,AAA0F,AAAC,AAAC,6FAAC,AAA0F;AAClO,AAAM,WAAC,AAAgB,4DAAC,AAAK,AAAE,sBAAe,AAAS,SAAE,IAAE,AAAQ,AAAC,UACjE,AAAI,KAAC,AAAE,AAAC,AAAE,MAAC,AAAI,MAAC,AAAI,KAAC,AAAE,IAAE,AAAK,AAAC,AAAC,AACrC;AAAC,AAAC,AAEF,AAAM,CAnBiB,AAAI,AAAI;;AAoB7B,AAAyC;AACzC,AAAM,WAAC,AAAO,QAAC,AAAG,IAAC,CAAC,AAAW,AAAE,eAAE,AAAO,QAAC,AAAK,AAAC,AAAC,AACpD;AAAC,AAED,AAAM;;AACJ,UAAM,AAAQ,WAAG,AAAQ,iCAAC,AAAO,AAAE;AACnC,UAAM,AAAa,gBAAG,AAAQ,aAAK,AAAQ,iCAAC,AAAG,AAAC,AAAC,MAAC,AAAE,AAAC,AAAC,AAAC,SAAI,AAAO,QAAC,AAAI,IAAE;AAEzE,QAAI,AAAQ,WAAG,AAAE;AACjB,AAAE,AAAC,QAAC,AAAQ,aAAK,AAAQ,iCAAC,AAAG,AAAC,KAAC,AAAC;AAC9B,AAAuC;AACvC,AAAQ,mBAAG,AAA0F,AACvG;AAAC,AACD,AAAI,WAAC,AAAE,AAAC,IAAC,AAAQ,aAAK,AAAQ,iCAAC,AAAO,AAAC,SAAC,AAAC;AACvC,AAAuC;AACvC,AAAQ,mBAAG,AAAO,QAAC,AAAI,SAAK,AAAM,AAAC,AAAC,SAClC,AAA0F,AAAC,AAAC,6FAC5F,AAA0F,AAC9F;AAAC;AAED,AAAsC;AACtC,AAAM,WAAC,AAAgB,AAAC,oEAAQ,AAAQ,SAAC,AAAqB,wBAAG,AAAa,aAAE,IAAE,AAAO,SAAE,AAAQ,AAAC,UACjG,AAAI,KAAC,AAAE,AAAC,AAAE,MAAC,AAAI,MAAC,AAAI,KAAC,AAAE,AAAE,WAAO,AAAQ,aAAK,AAAQ,iCAAC,AAAO,AAAC,AAAC,UAAC,AAAM,AAAC,AAAC,SAAC,AAAE,EAAE,AAAC,AAAC,AACpF;AAAC,AAED,AAAM;;AACJ,UAAM,AAAQ,WAAG,AAAQ,iCAAC,AAAO,AAAE;AACnC,UAAM,AAAa,gBAAG,AAAQ,aAAK,AAAQ,iCAAC,AAAG,AAAC,AAAC,MAAC,AAAE,AAAC,AAAC,AAAC,SAAI,AAAO,QAAC,AAAI,IAAE;AAEzE,QAAI,AAAQ,WAAG,AAAE;AACjB,AAAE,AAAC,QAAC,AAAQ,aAAK,AAAQ,iCAAC,AAAG,AAAC,KAAC,AAAC;AAC9B,AAAuC;AACvC,AAAQ,mBAAG,AAA0F,AACvG;AAAC,AACD,AAAI,WAAC,AAAE,AAAC,IAAC,AAAQ,aAAK,AAAQ,iCAAC,AAAO,AAAC,SAAC,AAAC;AACvC,AAAuC;AACvC,AAAQ,mBAAG,AAAO,QAAC,AAAI,SAAK,AAAM,AAAC,AAAC,SAClC,AAA0F,AAAC,AAAC,6FAC5F,AAA0F,AAC9F;AAAC;AAED,AAAsC;AACtC,AAAM,WAAC,AAAgB,AAAC,qEAAS,AAAQ,SAAC,AAAqB,wBAAG,AAAa,aAAE,IAAE,AAAQ,UAAE,AAAQ,AAAC,UACnG,AAAI,KAAC,AAAE,AAAC,AAAE,MAAC,AAAI,MAAC,AAAI,KAAC,AAAE,AAAE,aAAS,AAAQ,aAAK,AAAQ,iCAAC,AAAO,AAAC,AAAC,UAAC,AAAM,AAAC,AAAC,SAAC,AAAE,EAAE,AAAC,AAAC,AACtF;AAAC","sourcesContent":["import BluebirdPromise from \"bluebird-lst\"\nimport { getBinFromGithub } from \"builder-util/out/binDownload\"\nimport { Lazy } from \"lazy-val\"\nimport * as path from \"path\"\nimport { Platform } from \"../core\"\n\nexport function getLinuxToolsPath() {\n  //noinspection SpellCheckingInspection\n  return getBinFromGithub(\"linux-tools\", \"mac-10.12.3\", \"SQ8fqIRVXuQVWnVgaMTDWyf2TLAJjJYw3tRSqQJECmgF6qdM7Kogfa6KD49RbGzzMYIFca9Uw3MdsxzOPRWcYw==\")\n}\n\nexport function getAppImage() {\n  //noinspection SpellCheckingInspection\n  return getBinFromGithub(\"appimage\", \"9.0.3\", \"jaOGGGXLKjJV4SXajFOoIb7vCq4GbN0ggy5eosd8F0GAh0ythYfZSq9Lj/+uymmw2h3kKf9W8Y2KBnWxIjU0aw==\")\n}\n\nexport const fpmPath = new Lazy(() => {\n  if (process.platform === \"win32\" || process.env.USE_SYSTEM_FPM === \"true\") {\n    return BluebirdPromise.resolve(\"fpm\")\n  }\n\n  const osAndArch = process.platform === \"darwin\" ? \"mac\" : `linux-x86${process.arch === \"ia32\" ? \"\" : \"_64\"}`\n\n  if (process.platform === \"darwin\") {\n    //noinspection SpellCheckingInspection\n    return getBinFromGithub(\"fpm\", \"1.9.2.1-20150715-2.2.2-mac\", \"6sZZoRKkxdmv3a6E5dnZgVl23apGnImhDtGHKhgCE1WOtXBUJnx+w0WvB2HD2/sitz4f93Mf7+QqDCIbfP7LOw==\")\n      .then(it => path.join(it, \"fpm\"))\n  }\n\n  //noinspection SpellCheckingInspection\n  const checksum = process.arch === \"ia32\" ? \"cTT/HdjrQ6qTJQhTZaZC3lyDkRCyNFtNBZ0F7n6mh5B3YmD5ttJZ0xn65pQS03dhEi67A8K1xXNO+tyEEviiIg==\" : \"0zKxWlHuQEUsXJpWll5Bc4OTI8d0jcMVlme9OeHI+Y+s3sv1S4KyGLOEVEkNw6pRU8F+A1Dj5IR95/+U8YzB0A==\"\n  return getBinFromGithub(\"fpm\", `1.9.2-2.3.1-${osAndArch}`, checksum)\n    .then(it => path.join(it, \"fpm\"))\n})\n\nexport function prefetchBuildTools() {\n  // yes, we starting to use native Promise\n  return Promise.all([getAppImage(), fpmPath.value])\n}\n\nexport function getZstd() {\n  const platform = Platform.current()\n  const archQualifier = platform === Platform.MAC ? \"\" : `-${process.arch}`\n\n  let checksum = \"\"\n  if (platform === Platform.MAC) {\n    // noinspection SpellCheckingInspection\n    checksum = \"Ts8UetZVWz1G1qhzmsw4FlbK9L3sgI3OVYAMffIK0qPy4gxnTSSV7dhvE54SpmhWnfTlELmprbAAJm5zzcqT8w==\"\n  }\n  else if (platform === Platform.WINDOWS) {\n    // noinspection SpellCheckingInspection\n    checksum = process.arch === \"ia32\" ?\n      \"zjMFp++cp6ekMDaKu/SsFlog6cyr5kdgk5x2IvSpB6IsSp0c7bTL2Y58lLpV4qPAL1eagjjoMHi+doOWFSHpzg==\" :\n      \"oTOQout3zX0x/4gcXGcoevs79TqnlY7CQNXXx/cwp2ebj1dgavf8C9R3JvNFKQf/mQ7WcY7+W9vVI2oP7mxbFA==\"\n  }\n\n  //noinspection SpellCheckingInspection\n  return getBinFromGithub(`zstd-${platform.buildConfigurationKey}${archQualifier}`, \"1.3.2\", checksum)\n    .then(it => path.join(it, `zstd${platform === Platform.WINDOWS ? \".exe\" : \"\"}`))\n}\n\nexport function getAria() {\n  const platform = Platform.current()\n  const archQualifier = platform === Platform.MAC ? \"\" : `-${process.arch}`\n\n  let checksum = \"\"\n  if (platform === Platform.MAC) {\n    // noinspection SpellCheckingInspection\n    checksum = \"UjstpQUAtoP/sZ9SNuWwIN1WyDfvr1V3bzLGzTZCt1IqQsf9YwBSo0jrXMMRZOqv1sy5EOvp5nyC4VvJZCRVuQ==\"\n  }\n  else if (platform === Platform.WINDOWS) {\n    // noinspection SpellCheckingInspection\n    checksum = process.arch === \"ia32\" ?\n      \"aulZig14OCHqj5qUWDvIAacibzW9k+gfDGDeECzWDrF7FPYzI+Vn7Q7QnW/FXNyNnbe8PeYawTlGzD3vJxLQWg==\" :\n      \"zksKH0Uazwtc/vfGSVy+tzsNou+thSamAGTKt8P1DLoNkdSz9ueaIFoJ7jt8jlDds8Z6Rrxls6IFkZRBDxiyfg==\"\n  }\n\n  //noinspection SpellCheckingInspection\n  return getBinFromGithub(`aria2-${platform.buildConfigurationKey}${archQualifier}`, \"1.33.1\", checksum)\n    .then(it => path.join(it, `aria2c${platform === Platform.WINDOWS ? \".exe\" : \"\"}`))\n}"]}
